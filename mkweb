#!/bin/sh
# mkweb v0.1; copyright 2021 Job79
# license: mit-license.org
HELP(){ printf "USAGE
	mkweb command [args...]

COMMANDS
	run [filter]		Generate changed files
	crun [filter]		Clean and generate files
	clean			Remove generated website files
"; }
RUN(){
	[ -x 'config' ] && . './config'
	find 'src' -type f \( -name "${1:-*}" ! -name '_*' \) | while read -r in
	do
		out="out/${in#*/}"
		if [ -n "$1" ] || [ ! -f "$out" ] || [ "$( find "$in" -newer "$out" )" ]; then
			log "$in" 'run'
			outdir="${out%/*}"; [ ! -d "$outdir" ] && mkdir -p "$outdir"
			if [ -x "$in" ]; then . "./$in" > "$out"; else cp "$in" "$out"; fi
			for h in $hooks; do ${h#*:}; done
		fi
	done
	[ -x 'publish' ] && . './publish'
}
CLEAN(){ log 'cleaned output folder'; rm -rf out; }

# LIB #
use(){ for p in "$@"; do [ -x "mod/$p" ] || continue; debug "loading module $p"; . "./mod/$p"; done }
hook(){ debug "registering hook $1"; hooks="$(printf "%s\n" $hooks "$1:$2" | sort -n | tr '\n' ' ')"; }

log(){ printf '\e[0;35m[\e[0m%s\e[0;35m]\e[0m %s\n' "${2:-info}" "$1" >&2; }
warning() { printf '[\e[0;33m%s\e[0m] %s\n' "${2:-warning}" "$1" >&2; }
error() { printf '[\e[0;31m%s\e[0m] %s\n' "${2:-error}" "$1" >&2; }
debug(){ [ "$debug" = '1' ] && printf '\e[0;33m[\e[0m%s\e[0;33m]\e[0m %s\n' "${2:-debug}" "$1" >&2; }

alias _='cat<<\_'; alias __='cat<<__'

# INPUT #
cd "$(dirname "$(realpath "$0")")" || exit;
debug='0'; PATH="./mod/bin:$PATH"
case "$1" in
	run) shift; RUN "$@" ;;
	crun) shift; CLEAN; RUN; "$@" ;;
	clean) shift; CLEAN "$@" ;;
	*) HELP ;;
esac
exit 0
